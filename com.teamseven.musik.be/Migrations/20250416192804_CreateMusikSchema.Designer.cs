// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using com.teamseven.musik.be.Models.Contexts;

#nullable disable

namespace com.teamseven.musik.be.Migrations
{
    [DbContext(typeof(MusikDbContext))]
    [Migration("20250416192804_CreateMusikSchema")]
    partial class CreateMusikSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("album_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("album_name");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("img");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("release_date");

                    b.HasKey("AlbumId")
                        .HasName("PK__Album__B0E1DDB2EF372859");

                    b.ToTable("Album", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.AlbumArtist", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int")
                        .HasColumnName("album_id");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int")
                        .HasColumnName("artist_id");

                    b.HasKey("AlbumId", "ArtistId")
                        .HasName("PK__AlbumArt__B62CD9B2588E67DA");

                    b.HasIndex("ArtistId");

                    b.ToTable("AlbumArtist", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("artist_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("artist_name");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("img");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubscribeNumber")
                        .HasColumnType("int")
                        .HasColumnName("subscribe_number");

                    b.Property<bool>("VerifiedArtist")
                        .HasColumnType("bit")
                        .HasColumnName("verified_artist");

                    b.HasKey("ArtistId")
                        .HasName("PK__Artist__6CD04001AD589F42");

                    b.ToTable("Artist", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("genre_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("genre_name");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("img");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId")
                        .HasName("PK__Genre__18428D42BE113DBB");

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.History", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("history_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int")
                        .HasColumnName("genre_id");

                    b.Property<DateTime?>("LastPlayed")
                        .HasColumnType("datetime")
                        .HasColumnName("last_played");

                    b.Property<int?>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("track_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("HistoryId")
                        .HasName("PK__History__096AA2E939D6FE0E");

                    b.HasIndex("GenreId");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserId");

                    b.ToTable("History", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("playlist_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaylistId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaylistName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("playlist_name");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("PlaylistId")
                        .HasName("PK__Playlist__FB9C14108B86F8A5");

                    b.HasIndex("UserId");

                    b.ToTable("Playlist", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.PlaylistTrack", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("int")
                        .HasColumnName("playlist_id");

                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("track_id");

                    b.HasKey("PlaylistId", "TrackId")
                        .HasName("PK__Playlist__09D2D892E3577A98");

                    b.HasIndex("TrackId");

                    b.ToTable("PlaylistTrack", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Podcast", b =>
                {
                    b.Property<int>("PodcastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("podcast_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PodcastId"));

                    b.Property<int?>("ArtistId")
                        .HasColumnType("int")
                        .HasColumnName("artist_id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("Img")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("img");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistId")
                        .HasColumnType("int")
                        .HasColumnName("playlist_id");

                    b.Property<string>("PodcastDetail")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("podcast_detail");

                    b.Property<string>("PodcastTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("podcast_title");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("release_date");

                    b.HasKey("PodcastId")
                        .HasName("PK__Podcast__147CC04273B6550C");

                    b.HasIndex("ArtistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Podcast", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("track_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrackId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("img");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLikes")
                        .HasColumnType("int")
                        .HasColumnName("total_likes");

                    b.Property<int>("TotalViews")
                        .HasColumnType("int")
                        .HasColumnName("total_views");

                    b.Property<string>("TrackBlobsLink")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("track_blobs_link");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("track_name");

                    b.HasKey("TrackId")
                        .HasName("PK__Track__24ECC82EC89450EE");

                    b.ToTable("Track", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.TrackAlbum", b =>
                {
                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("track_id");

                    b.Property<int>("AlbumId")
                        .HasColumnType("int")
                        .HasColumnName("album_id");

                    b.HasKey("TrackId", "AlbumId")
                        .HasName("PK__TrackAlb__1FE2D5F56620156E");

                    b.HasIndex("AlbumId");

                    b.ToTable("TrackAlbum", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.TrackArtist", b =>
                {
                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("track_id");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int")
                        .HasColumnName("artist_id");

                    b.HasKey("TrackId", "ArtistId")
                        .HasName("PK__TrackArt__2221CC2E9FA568C4");

                    b.HasIndex("ArtistId");

                    b.ToTable("TrackArtist", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.TrackGenre", b =>
                {
                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("track_id");

                    b.Property<int>("GenreId")
                        .HasColumnType("int")
                        .HasColumnName("genre_id");

                    b.HasKey("TrackId", "GenreId")
                        .HasName("PK__TrackGen__1568E0FAE821F8B0");

                    b.HasIndex("GenreId");

                    b.ToTable("TrackGenre", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AccountType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_type");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("ImgLink")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("img_link");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("NumberOfSubscriber")
                        .HasColumnType("int")
                        .HasColumnName("number_of_subscriber");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.HasKey("UserId")
                        .HasName("PK__User__B9BE370F8C11AB72");

                    b.HasIndex(new[] { "Email" }, "UQ_User_Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.AlbumArtist", b =>
                {
                    b.HasOne("com.teamseven.musik.be.Models.Entities.Album", "Album")
                        .WithMany("AlbumArtists")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AlbumArtist_Album");

                    b.HasOne("com.teamseven.musik.be.Models.Entities.Artist", "Artist")
                        .WithMany("AlbumArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AlbumArtist_Artist");

                    b.Navigation("Album");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.History", b =>
                {
                    b.HasOne("com.teamseven.musik.be.Models.Entities.Genre", "Genre")
                        .WithMany("Histories")
                        .HasForeignKey("GenreId")
                        .HasConstraintName("FK_History_Genre");

                    b.HasOne("com.teamseven.musik.be.Models.Entities.Track", "Track")
                        .WithMany("Histories")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("FK_History_Track");

                    b.HasOne("com.teamseven.musik.be.Models.Entities.User", "User")
                        .WithMany("Histories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_History_User");

                    b.Navigation("Genre");

                    b.Navigation("Track");

                    b.Navigation("User");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Playlist", b =>
                {
                    b.HasOne("com.teamseven.musik.be.Models.Entities.User", "User")
                        .WithMany("Playlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Playlist_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.PlaylistTrack", b =>
                {
                    b.HasOne("com.teamseven.musik.be.Models.Entities.Playlist", "Playlist")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PlaylistTrack_Playlist");

                    b.HasOne("com.teamseven.musik.be.Models.Entities.Track", "Track")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PlaylistTrack_Track");

                    b.Navigation("Playlist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Podcast", b =>
                {
                    b.HasOne("com.teamseven.musik.be.Models.Entities.Artist", "Artist")
                        .WithMany("Podcasts")
                        .HasForeignKey("ArtistId")
                        .HasConstraintName("FK_Podcast_Artist");

                    b.HasOne("com.teamseven.musik.be.Models.Entities.Playlist", "Playlist")
                        .WithMany("Podcasts")
                        .HasForeignKey("PlaylistId")
                        .HasConstraintName("FK_Podcast_Playlist");

                    b.Navigation("Artist");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.TrackAlbum", b =>
                {
                    b.HasOne("com.teamseven.musik.be.Models.Entities.Album", "Album")
                        .WithMany("TrackAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackAlbum_Album");

                    b.HasOne("com.teamseven.musik.be.Models.Entities.Track", "Track")
                        .WithMany("TrackAlbums")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackAlbum_Track");

                    b.Navigation("Album");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.TrackArtist", b =>
                {
                    b.HasOne("com.teamseven.musik.be.Models.Entities.Artist", "Artist")
                        .WithMany("TrackArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackArtist_Artist");

                    b.HasOne("com.teamseven.musik.be.Models.Entities.Track", "Track")
                        .WithMany("TrackArtists")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackArtist_Track");

                    b.Navigation("Artist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.TrackGenre", b =>
                {
                    b.HasOne("com.teamseven.musik.be.Models.Entities.Genre", "Genre")
                        .WithMany("TrackGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackGenre_Genre");

                    b.HasOne("com.teamseven.musik.be.Models.Entities.Track", "Track")
                        .WithMany("TrackGenres")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrackGenre_Track");

                    b.Navigation("Genre");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Album", b =>
                {
                    b.Navigation("AlbumArtists");

                    b.Navigation("TrackAlbums");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Artist", b =>
                {
                    b.Navigation("AlbumArtists");

                    b.Navigation("Podcasts");

                    b.Navigation("TrackArtists");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Genre", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("TrackGenres");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Playlist", b =>
                {
                    b.Navigation("PlaylistTracks");

                    b.Navigation("Podcasts");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.Track", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("PlaylistTracks");

                    b.Navigation("TrackAlbums");

                    b.Navigation("TrackArtists");

                    b.Navigation("TrackGenres");
                });

            modelBuilder.Entity("com.teamseven.musik.be.Models.Entities.User", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("Playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
